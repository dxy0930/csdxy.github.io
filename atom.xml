<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dxy之家</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dxy0930.github.io/"/>
  <updated>2020-04-13T00:56:23.692Z</updated>
  <id>https://dxy0930.github.io/</id>
  
  <author>
    <name>Dxy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>体验碎片的活动周期部分代码</title>
    <link href="https://dxy0930.github.io/2020/04/13/SuiPianLife/"/>
    <id>https://dxy0930.github.io/2020/04/13/SuiPianLife/</id>
    <published>2020-04-13T00:55:50.416Z</published>
    <updated>2020-04-13T00:56:23.692Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">public class RightFragment extends Fragment &#123;</span><br><span class="line"></span><br><span class="line">    public static final String TAG = <span class="string">"RightFragment"</span>;</span><br><span class="line">    @Override</span><br><span class="line">    public void onAttach(Context context) &#123;</span><br><span class="line">        super.onAttach(context);</span><br><span class="line">        Log.d(TAG, <span class="string">"onAttach"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onCreate(@Nullable Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        Log.d(TAG, <span class="string">"onCreate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Nullable</span><br><span class="line">    @Override</span><br><span class="line">    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) &#123;</span><br><span class="line">        View view = inflater.inflate(R.layout.right_fragment,container,<span class="literal">false</span>);</span><br><span class="line">        Log.d(TAG, <span class="string">"onCreateView"</span>);</span><br><span class="line">        <span class="built_in">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onActivityCreated(@Nullable Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onActivityCreated(savedInstanceState);</span><br><span class="line">        Log.d(TAG, <span class="string">"onActivityCreated"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="function"><span class="title">onStart</span></span>() &#123;</span><br><span class="line">        super.onStart();</span><br><span class="line">        Log.d(TAG, <span class="string">"onStart"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="function"><span class="title">onResume</span></span>() &#123;</span><br><span class="line">        super.onResume();</span><br><span class="line">        Log.d(TAG, <span class="string">"onResume"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="function"><span class="title">onPause</span></span>() &#123;</span><br><span class="line">        super.onPause();</span><br><span class="line">        Log.d(TAG, <span class="string">"onPause"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="function"><span class="title">onStop</span></span>() &#123;</span><br><span class="line">        super.onStop();</span><br><span class="line">        Log.d(TAG, <span class="string">"onStop"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="function"><span class="title">onDestroyView</span></span>() &#123;</span><br><span class="line">        super.onDestroyView();</span><br><span class="line">        Log.d(TAG, <span class="string">"onDestroyView"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="function"><span class="title">onDestroy</span></span>() &#123;</span><br><span class="line">        super.onDestroy();</span><br><span class="line">        Log.d(TAG, <span class="string">"onDestroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void <span class="function"><span class="title">onDetach</span></span>() &#123;</span><br><span class="line">        super.onDetach();</span><br><span class="line">        Log.d(TAG, <span class="string">"onDetach"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>碎片的通讯</title>
    <link href="https://dxy0930.github.io/2020/04/11/SuiPian/"/>
    <id>https://dxy0930.github.io/2020/04/11/SuiPian/</id>
    <published>2020-04-11T11:00:16.943Z</published>
    <updated>2020-04-13T00:38:27.934Z</updated>
    
    <content type="html"><![CDATA[<h2 id="碎片与活动间的通讯"><a href="#碎片与活动间的通讯" class="headerlink" title="碎片与活动间的通讯"></a>碎片与活动间的通讯</h2><h3 id="活动获得碎片实例"><a href="#活动获得碎片实例" class="headerlink" title="活动获得碎片实例"></a>活动获得碎片实例</h3><p>碎片与活动之间的通信可以使用FragmentManager提供的类似findViewById()的方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RightFragment rightFragment = (RightFragment) getSupportFragmentManager().findFragmentById(R.id.right_fragment);</span><br></pre></td></tr></table></figure><p>通过以上语句可以获得一个相应碎片实例，然后便可以通过实例来调用碎片的相关方法。</p><h3 id="碎片获得活动的实例"><a href="#碎片获得活动的实例" class="headerlink" title="碎片获得活动的实例"></a>碎片获得活动的实例</h3><p>碎片可以通过getActivity()得到活动实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MainActivity activity = (MainActivity) getActivity();</span><br></pre></td></tr></table></figure><p>##碎片与碎片之间的通讯<br>可以通过碎片-活动-碎片的过程进行通讯。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;碎片与活动间的通讯&quot;&gt;&lt;a href=&quot;#碎片与活动间的通讯&quot; class=&quot;headerlink&quot; title=&quot;碎片与活动间的通讯&quot;&gt;&lt;/a&gt;碎片与活动间的通讯&lt;/h2&gt;&lt;h3 id=&quot;活动获得碎片实例&quot;&gt;&lt;a href=&quot;#活动获得碎片实例&quot; class=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
